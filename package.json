{   
	"name": "hover-exec",
	"publisher": "rmzetti",
	"displayName": "Hover Exec",
	"description": "execute codeblocks",
	"version": "0.5.2",
	"repository": "https://github.com/rmzetti/hover-exec",
	"license": "NCSA",
	"contributors": [
		"rmzetti"
	],
    "engines": {
		"vscode": "^1.56.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onLanguage:markdown"
	],
	"main": "./dist/extension.js",
	"contributes": {
		"commands": [
			{ "command": "hover-exec.exec",
			  "title": "Hover-exec: execute codeblock"
			}
		],	
		"configuration": {
			"type":"object",
			"title":"Hover Exec",
			"properties": {
				"hover-exec.scripts":{
          "description": "NB. Edit or add scripts using code blocks (see README)",
					"default":{
            "octave":{
                "cmd":"octave \"%f\"",
                "start":"",
                "inline":"%%=",
                "swap":"disp(['{{' $1 '}}'])",
                "tempf":"temp.m",
                "nb":"% in-line comments"
            },
            "matlab":{
                "cmd":"matlab -sd \"%p/\" -batch temp",
                "start":"cd '%c'",
                "inline":"%%=",
                "swap":"disp([\"{{\"+($1)+\"}}\"])",
                "tempf":"temp.m",
                "nb":"% in-line comments",
                "todo":"why the extra / in cmd after %p"
            },
            "scilab":{
                "cmd":"scilex -quit -nb -f \"%f\" ",
                "start":"",
                "inline":"//=",
                "swap":"mprintf('%s\\n','{{'+$1+'}}')",
                "tempf":"temp.sci",
                "nb":"// for in-line comments"
            },
            "python":{
                "cmd":"python \"%f\"",
                "start":"",
                "inline":"##=",
                "swap":"print('{{'+str($1)+'}}')",
                "tempf":"temp.py",
                "nb":"# in-line comments"
            },
            "python3":{
                "cmd":"python3 \"%f\"",
                "start":"",
                "inline":"##=",
                "swap":"print('{{'+str($1)+'}}')",
                "tempf":"temp.py",
                "nb":"# in-line comments #"
            },
            "streamlit":{
                "cmd":"streamlit run \"%f\" ",
                "start":"",
                "inline":"",
                "swap":"",
                "tempf":"temp.py",
                "nb":"# for in-line comments, no in-line results"
            },
            "julia":{
                "cmd":"julia \"%f\"",
                "start":"",
                "inline":"##=",
                "swap":"println(string(\"{{\",$1,\"}}\"))",
                "tempf":"temp.jl",
                "nb":"in-line comments #, results ##=",
                "prev_start":"cd(\"%c\")"
            },
            "gnuplot":{
                "cmd":"gnuplot -p -c \"%f\"",
                "start":"",
                "inline":"",
                "swap":"",
                "tempf":"temp.gp",
                "nb":"no results returned",
                "prev_start":"set loadpath \"%c\""
            },
            "pwsh":{
                "cmd":"pwsh -f \"%f\"",
                "start":"",
                "inline":"##=",
                "swap":"'{{'+($1)+'}}'",
                "tempf":"temp.ps1",
                "nb":"# for in-line comments",
                "prev_cmd":"cd \"%c\"; "
            },
            "bash":{
                "cmd":"bash \"%f\"",
                "start":"",
                "inline":"##=",
                "swap":"'{{'+($1)+'}}'",
                "tempf":"temp.sh",
                "nb":"# for in-line comments",
                "prev_cmd":"cd \"%c\";"
            },
            "zsh":{
                "cmd":"zsh -f \"%f\"",
                "start":"",
                "inline":"##=",
                "swap":"'{{'+($1)+'}}'",
                "tempf":"temp.sh",
                "nb":"# for in-line comments",
                "prev_cmd":"cd \"%c\";"
            },
            "lua54":{
                "cmd":"lua54 \"%f\"",
                "start":"",
                "inline":"--=",
                "swap":"print('{{'..($1)..'}}')",
                "tempf":"temp.lua",
                "nb":"-- for in-line comments"
            },
            "lua":{
                "alt":"lua54"
            },
            "js":{
                "cmd":"node \"%f\"",
                "start":"",
                "inline":"//=",
                "swap":"console.log('{{'+($1)+'}}')",
                "tempf":"temp.js",
                "nb":"// for in-line comments"
            },
            "node":{
                "alt":"js",
                "nb":"will use strings as in js"
            },
            "javascript":{
                "alt":"js",
                "nb":"will use strings as in js"
              },
            "html":{
                "cmd":"\"%f\"",
                "start":"",
                "inline":"",
                "swap":"",
                "tempf":"temp.html",
                "nb":"no results returned"
            },
            "firefox":{
                "cmd":"firefox \"%f\"",
                "start":"",
                "inline":"",
                "swap":"",
                "tempf":"temp.html",
                "nb":"no results returned",
                "prev_cmd":""
            },				
            "test":{
                "cmd":"test_exec",
                "start":"",
                "inline":"",
                "swap":"",
                "tempf":"test.tst",
                "nb":"no results returned"
            },
            "eval":{
                "cmd":"",
                "start":"",
                "inline":"//=",
                "swap":"write('{{',($1),'}}')",
                "swapold":"'{{'+($1)+'}}'",
                "tempf":"temp.js",
                "nb":"// for in-line comments",
                "prev_cmd":""
            },
            "go":{
                "cmd":"go run \"%f\"",
                "start":"",
                "inline":"//=",
                "swap":"'{{'+($1)+'}}'",
                "tempf":"temp.go",
                "nb":"// for in-line comments"
            },
            "buddvs":{
              "cmd":"buddvs \"%f\" ",
              "start":"chdir(\"%c\");",
              "inline":"//=",
              "swap":"write('{{'+($1)+'}}')",
              "tempf":"temp.txt"
            }
        }}}
		},
    "keybindings": [
			{
				"command": "hover-exec.exec",
				"key": "alt+/",
				"mac": "opt+/",
				"when": "editorLangId == markdown"
			}
    ]
	},
	"scripts": {
		"vscode:prepublish": "npm run package",
		"compile": "webpack",
		"watch": "webpack --watch --devtool eval",
		"package": "webpack --mode production",
		"test-compile": "tsc -p ./",
		"test-watch": "tsc -watch -p ./",
		"pretest": "npm run test-compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/glob": "^7.1.3",
		"@types/mocha": "^8.0.4",
		"@types/node": "^12.11.7",
		"@types/vscode": "^1.56.0",
		"@typescript-eslint/eslint-plugin": "^4.14.1",
		"@typescript-eslint/parser": "^4.14.1",
		"eslint": "^7.19.0",
		"glob": "^7.1.6",
		"mocha": "^8.2.1",
		"ts-loader": "^8.3.0",
		"typescript": "^4.1.3",
		"vscode-test": "^1.5.0",
		"webpack": "^5.40.0",
		"webpack-cli": "^4.7.2"
	},
	"comments": {
		"//": [
			"originally in package:",
			"webpack --mode production --devtool hidden-source-map",
			"for hover, did not need under contributes:",
			"  'capabilities':{'hoverProvider':'true'},"
		]
	}
}
